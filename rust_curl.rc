#[crate_type = "lib"];
#[desc="Rust Curl"];
#[author="Mark Edward Sinclair"];
#[license="MIT"];
#[link(name = "rust_curl", vers = "0.1")];

extern mod extra;

pub mod headers;
pub mod request;
pub mod response;

#[path="curl/curl.rs"]
pub mod curl;
#[path="examples/examples.rs"]
pub mod examples;
pub mod http_client;



fn main() {
    use std::hashmap::HashMap;
    use request::Request;
    use std::str::from_bytes;

    let client = http_client::HttpClient::new();

    let url = "http://api.4chan.org/pol/threads.json";
    let mut headers = HashMap::new();
    headers.insert(headers::request::ACCEPT.to_owned(),~"application/json");

    let req = Request::new(url.to_owned(),headers,~[]);

    let resp = match client.exec(&req) {
        Ok(response) => response,
        Err(msg) => fail!(msg),
    };

    for resp.headers.iter().advance |(k, v)| {
        println(fmt!("%s: %s",*k,*v));
    }

    println(from_bytes(resp.body));
}
